{"version":3,"file":"/Users/sorynsoo/Desktop/OneForCode/tools/config/project.config.ts","sources":["/Users/sorynsoo/Desktop/OneForCode/tools/config/project.config.ts"],"names":[],"mappings":";;;;;;AAAA,qBAAqB,MAAM,CAAC,CAAA;AAE5B,4BAA2B,eAAe,CAAC,CAAA;AAO3C;IAAmC,iCAAU;IAI3C;QACE,iBAAO,CAAC;QAHV,sBAAiB,GAAG,WAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAU1E,IAAI,CAAC,gBAAgB,GAChB,IAAI,CAAC,gBAAgB,QAGzB,CAAC;QAGF,IAAI,CAAC,UAAU,GACV,IAAI,CAAC,UAAU,QAGnB,CAAC;QAEF,IAAI,CAAC,iBAAiB,CAAC;YACrB,IAAI,EAAE,iBAAiB;YACvB,IAAI,EAAE,uCAAuC;YAC7C,WAAW,EAAE;gBACX,IAAI,EAAE,gBAAgB;gBACtB,gBAAgB,EAAE,IAAI;gBACtB,MAAM,EAAE,QAAQ;aACjB;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC;YACrB,IAAI,EAAE,sBAAsB;YAC5B,IAAI,EAAE,iDAAiD;YACvD,WAAW,EAAE;gBACX,IAAI,EAAE,UAAU;gBAChB,gBAAgB,EAAE,IAAI;aACvB;SACF,CAAC,CAAC;QAGH,IAAI,CAAC,iBAAiB,CAAC;YACrB,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,mCAAmC;YACzC,WAAW,EAAE;gBACX,IAAI,EAAE,aAAa;gBACnB,gBAAgB,EAAE,IAAI;aACvB;SACF,CAAC,CAAC;QAGH,IAAI,CAAC,iBAAiB,CAAC;YACrB,IAAI,EAAE,cAAc;YACpB,IAAI,EAAE,uDAAuD;YAC7D,WAAW,EAAE;gBACX,IAAI,EAAE,iBAAiB;gBACvB,gBAAgB,EAAE,IAAI;aACvB;SACF,CAAC,CAAC;IA6BL,CAAC;IAEH,oBAAC;AAAD,CAAC,AA7FD,CAAmC,wBAAU,GA6F5C;AA7FY,qBAAa,gBA6FzB,CAAA","sourcesContent":["import { join } from 'path';\n\nimport { SeedConfig } from './seed.config';\n// import { ExtendPackages } from './seed.config.interfaces';\n\n/**\n * This class extends the basic seed configuration, allowing for project specific overrides. A few examples can be found\n * below.\n */\nexport class ProjectConfig extends SeedConfig {\n\n  PROJECT_TASKS_DIR = join(process.cwd(), this.TOOLS_DIR, 'tasks', 'project');\n\n  constructor() {\n    super();\n    // this.APP_TITLE = 'Put name of your app here';\n\n    /* Enable typeless compiler runs (faster) between typed compiler runs. */\n    // this.TYPED_COMPILE_INTERVAL = 5;\n\n    // Add `NPM` third-party libraries to be injected/bundled.\n    this.NPM_DEPENDENCIES = [\n      ...this.NPM_DEPENDENCIES,\n      // {src: 'jquery/dist/jquery.min.js', inject: 'libs'},\n      // {src: 'lodash/lodash.min.js', inject: 'libs'},\n    ];\n\n    // Add `local` third-party libraries to be injected/bundled.\n    this.APP_ASSETS = [\n      ...this.APP_ASSETS,\n      // {src: `${this.APP_SRC}/your-path-to-lib/libs/jquery-ui.js`, inject: true, vendor: false}\n      // {src: `${this.CSS_SRC}/path-to-lib/test-lib.css`, inject: true, vendor: false},\n    ];\n    //MATERIALIZE STUFF\n    this.addPackageBundles({\n      name: 'materialize-css',\n      path: 'node_modules/materialize-css/dist/js/',\n      packageMeta: {\n        main: 'materialize.js',\n        defaultExtension: 'js',\n        format: 'global'\n      }\n    });\n\n    this.addPackageBundles({\n      name: 'angular2-materialize',\n      path: 'node_modules/angular2-materialize/dist/index.js',\n      packageMeta: {\n        main: 'index.js',\n        defaultExtension: 'js'\n      }\n    });\n\n    //FIREBASE STUFF\n    this.addPackageBundles({\n      name: 'firebase',\n      path: 'node_modules/firebase/firebase.js',\n      packageMeta: {\n        main: 'firebase.js',\n        defaultExtension: 'js'\n      }\n    });\n\n    // Add AngularFire configuration to SystemJS\n    this.addPackageBundles({\n      name: 'angularfire2',\n      path: 'node_modules/angularfire2/bundles/angularfire2.umd.js',\n      packageMeta: {\n        main: 'angularfire2.js',\n        defaultExtension: 'js'\n      }\n    });\n\n    // Add packages (e.g. lodash)\n    // let additionalPackages: ExtendPackages[] = [{\n    //   name: 'lodash',\n    //   path: `${this.APP_BASE}node_modules/lodash/lodash.js`,\n    //   packageMeta: {\n    //     main: 'index.js',\n    //     defaultExtension: 'js'\n    //   }\n    // }];\n    //\n    // or\n    //\n    // let additionalPackages: ExtendPackages[] = [];\n    //\n    // additionalPackages.push({\n    //   name: 'lodash',\n    //   path: `${this.APP_BASE}node_modules/lodash/lodash.js`,\n    //   packageMeta: {\n    //     main: 'index.js',\n    //     defaultExtension: 'js'\n    //   }\n    // });\n    //\n    // this.addPackagesBundles(additionalPackages);\n\n    /* Add to or override NPM module configurations: */\n    // this.mergeObject(this.PLUGIN_CONFIGS['browser-sync'], { ghostMode: false });\n  }\n\n}\n"]}